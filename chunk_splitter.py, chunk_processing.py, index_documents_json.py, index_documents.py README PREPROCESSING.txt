CHUNK_SPLITTER PREPROCESS README (chunk_splitter.py, chunk_processing.py, index_documents_json.py, index_documents.py)
This repository contains a set of Python scripts that preprocess text files, process each chunk of text, and create an index of the processed documents. It is designed to handle large text files and efficiently index their content.

Libraries used
os
re
json
glob
logging
chardet
nltk
openai
transformers
retry
llama_index (a custom library for handling index creation and management)
Overview
chunk_splitter.py: This script takes a large text file as input, splits it into smaller chunks based on the target token count, and saves the chunks as separate files in a specified output directory.

index_documents_json.py: This script processes each chunk of text generated by chunk_splitter.py. It generates a title, introductory text, and concluding phrase for each chunk using the OpenAI GPT model. The processed chunks are then saved as JSON files in a specified output directory.

add_to_index.py: This script adds new documents to the existing index. It reads documents from the JSON directory and adds them to the index.

index_documents.py: This script is used to index or reindex the entire document set. It constructs a simple vector index of the documents and saves the index to disk.

Usage
First, run chunk_splitter.py to split large text files into smaller chunks.
Next, run chunk_processing.py : to process each chunk of text and save the processed chunks as JSON files
Next, run index_documents_json.py : to add new documents to the existing index
Then, run index_documents.py to create a new index if none exists.
Finally, run index_documents.py if you need to reindex or index the entire set of documents for the first time.
Make sure to update the file paths in each script to match the directory structure on your system.

In the provided scripts, the following directories are used:

chunker-upload: This directory is used as the input directory for chunk_splitter.py. Place the large text files you want to split into smaller chunks in this directory.

Path: C:/D/documenti/AI/program24/chunker-upload

chunker_split: This directory is used as the output directory for chunk_splitter.py. The smaller chunks generated by the script will be saved in this directory.

Path: C:/D/documenti/AI/program24/chunker_split

chunker_processed: This directory is used as the output directory for index_documents_json.py. The processed chunks (as JSON files) will be saved in this directory.

Path: C:/D/documenti/AI/program24/chunker_processed

json_output: This directory is used as the input directory for add_to_index.py. Place the JSON files generated by index_documents_json.py in this directory.

Path: C:/D/documenti/AI/program24/json_output

index: This directory is used by both add_to_index.py and index_documents.py to store the index files.

Path: C:/D/documenti/AI/program24/index

uploads: This directory is used as the input directory for index_documents.py. Place the documents you want to index or reindex in this directory.

Path: C:/D/documenti/AI/program24/uploads

Remember to update the directory paths in each script according to your system's directory structure.

Please we want to put on another PC tell us if there are absolute paths or other problems to make attention
There are a few absolute paths in the provided scripts, which you will need to update when moving the code to another PC. Make sure to replace these paths with the appropriate paths on the new PC. Below are the paths and the corresponding scripts:

chunk_splitter.py:

input_dir: C:/D/documenti/AI/program24/chunker-upload
output_dir: C:/D/documenti/AI/program24/chunker_split
index_documents_json.py:

input_dir: C:/D/documenti/AI/program24/chunker_split
output_dir: C:/D/documenti/AI/program24/chunker_processed
add_to_index.py:

INDEX_DIR: C:/D/documenti/AI/program24/index
SimpleDirectoryReader('C:/D/documenti/AI/program24/chunker_processed')
load_documents_from_json_directory('C:/D/documenti/AI/program24/json_output')
index_path: os.path.join(INDEX_DIR, 'directory_index.json')
index_documents.py:

INDEX_DIR: C:/D/documenti/AI/program24/index
SimpleDirectoryReader('C:/D/documenti/AI/program24/uploads')
index.save_to_disk(os.path.join(INDEX_DIR, 'directory_index.json'))
To avoid potential issues when transferring the code to another PC, ensure that all necessary libraries are installed on the new PC, and check if the scripts are using the correct Python interpreter (e.g., Python 3.x). Additionally, make sure to copy the required data directories (e.g., chunker-upload, chunker_split, chunker_processed, json_output, index, and uploads) to the new PC and update the paths in the scripts accordingly.