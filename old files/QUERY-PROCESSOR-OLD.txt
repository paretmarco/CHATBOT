import requests
import json
import sys
import os
import subprocess

def send_query_to_chatbot(query):
    chatbot_url = "http://127.0.0.1:5001/api/chatbot"
    data = {
        "user_input": query,
        "max_tokens": 100,
        "additional_context": ""
    }
    response = requests.post(chatbot_url, json=data)
    if response.status_code == 200:
        print(f"Chatbot response received.")
        return response.json()["response"]
    else:
        print(f"Error in chatbot response: {response.status_code}")
        return None

def send_query_to_search_snippets(query):
    search_url = "http://127.0.0.1:5000/api/search"
    data = {
        "query": query,
        "num_results": 1
    }
    response = requests.post(search_url, json=data)
    if response.status_code == 200:
        print(f"Search snippet response received.")
        return response.json()["response"]
    else:
        print(f"Error in search snippet response: {response.status_code}")
        return None

def sanitize_filename(filename):
    invalid_chars = {'/', '\\', ':', '*', '?', '<', '>', '|'}
    sanitized_name = ''.join(c if c not in invalid_chars else '_' for c in filename)
    return sanitized_name

def process_queries(project_output_directory):
    input_file = os.path.join("book_created", "book_data.json")
    print(f"Input file: {input_file}")

    if not os.path.exists(input_file):
        print("Input file not found.")
        return

    with open(input_file, "r") as infile:
        book_data = json.load(infile)

        for index, record in enumerate(book_data):
            query = record.get("chapter", "").strip()
            print(f"Extracted chapter: '{query}'")
            
            if query:
                print(f"Processing query: {query}")

                chatbot_response = send_query_to_chatbot(f"Complete this text: {query}")
                search_snippet_response = send_query_to_search_snippets(query)

                if chatbot_response or search_snippet_response:
                    record["results"] = {
                        "chatbot_response": chatbot_response,
                        "search_snippet_response": search_snippet_response
                    }
                
                # Save the progress to the JSON file
                with open(input_file, "w") as outfile:
                    json.dump(book_data, outfile, ensure_ascii=False, indent=2)

                print(f"JSON file updated with results for query {index + 1}.")

    print(f"Finished processing queries.")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: python query_processor.py <output_directory>")
    else:
        output_directory = sys.argv[1]
        process_queries(output_directory)

subprocess.run(["python", "book_compiler.py", output_directory])