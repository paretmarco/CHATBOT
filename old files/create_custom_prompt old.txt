import openai
import logging
from config import OPENAI_API_KEY

# Set up logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

openai.api_key = OPENAI_API_KEY
MODEL = "gpt-3.5-turbo"

def create_custom_prompt(chapter_1, chapter_2, chapter_3, book_index, query, current_chapter, mode="query"):
    prompt_seed = "chapter_1: << {chapter_1} >>\nchapter_2: << {chapter_2} >>\nchapter_3: << {chapter_3} >>\nbook_index: {book_index}\ncurrent_chapter: << {current_chapter} >>\nquery: {query}\n\n"
    user_message = f"Generate a diverse and creative prompt to explore the topic of the current chapter ###{current_chapter}### more effectively. Consider adding practical insights, metaphors, examples, and exercises."
    prompt = prompt_seed.format(chapter_1=chapter_1, chapter_2=chapter_2, chapter_3=chapter_3, book_index=book_index, current_chapter=current_chapter, query=query)

    messages = [
        {"role": "system", "content": "You are the supervisor of the book and a prompt expert."},
        {"role": "user", "content": prompt + user_message},
    ]

    response = openai.ChatCompletion.create(
        model=MODEL,
        messages=messages,
        temperature=0.7,
        max_tokens=150,
        stop=["\n"],
        top_p=1,
    )

    custom_prompt = response.choices[0].message['content'].strip()

    # Log the user message and received custom prompt
    logging.info(f"User message sent: {messages[-1]['content']}")
    logging.info(f"Custom prompt received: {custom_prompt}")

    return custom_prompt
