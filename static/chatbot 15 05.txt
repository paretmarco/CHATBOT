// Function for handling form submission
function handleFormSubmit(event) {
    event.preventDefault();
    const formData = new FormData(event.target);
    const query = formData.get("query");
    const max_tokens = parseInt(formData.get("max_tokens"));
    const num_results = parseInt(formData.get("num_results"));
    const user_personality = formData.get("user_personality");
    const task = formData.get("task");
    const format = formData.get("format");
    const additional_context = task + " " + format;

    // Get the selected model from the dropdown
    const model = $("#model").val();

    // Get snippets
    $.ajax({
        url: "/api/search_snippets",
        type: "POST",
        contentType: "application/json",
        dataType: "json",
        data: JSON.stringify({
            query: query,
            num_results: num_results
        }),
        success: function (response) {
            const snippets = response.response;
            displaySnippets(snippets);
            stopScrollingAndHideSnippets();
        }
    });

    // Get the chatbot's response
    $.ajax({
        url: "/api/chatbot",
        type: "POST",
        contentType: "application/json",
        dataType: "json",
        data: JSON.stringify({
            user_input: query,
            max_tokens: max_tokens,
            user_personality: user_personality,
            additional_context: additional_context,
            model: model,
            temperature: $("#temperature").val()
        }),
        success: function (response) {
            $("#chatbot_response").html(response.response);
            $("#edited_answer").val(response.response);
        }
    });
}

// stop scrolling
function stopScrollingAndHideSnippets() {
    $("#snippets").addClass("no-scroll");
    $("#snippets").css("display", "none"); // This will hide the snippets
}

// Function to save edited answer
function saveEditedAnswer() {
    const editedAnswer = $("#edited_answer").val();
    $("#final_answer").html(editedAnswer);
    saveEditedAnswerToSheet(editedAnswer);
}

// Document ready function
$(document).ready(function () {
    // Form submit event handler
    $("form").submit(handleFormSubmit);

    // Save edited answer event handler
    $("#save_edited_answer").click(saveEditedAnswer);
}

// Function to display snippets
function displaySnippets(snippets) {
    const snippetsContainer = $("#snippets");
    console.log('Received snippets:', snippets);
    snippetsContainer.empty(); // Clear the current snippets

    // Ensure snippets is an array
    if (Array.isArray(snippets)) {
        snippets.forEach(snippet => {
            console.log('Individual snippet:', snippet); // Log individual snippet
            if (Array.isArray(snippet.response) && snippet.response.length > 0) {
                const firstResponse = snippet.response[0];
                if (firstResponse.hasOwnProperty('response')) {
                    const text = firstResponse.response;
                    snippetsContainer.html(text);
                } else {
                    console.error('Snippet response does not contain the "response" property:', firstResponse);
                }
            } else {
                console.error('Snippet response is empty or not an array:', snippet.response);
            }
        });
    } else {
        console.error('Snippets received is not an array:', snippets);
    }
}
